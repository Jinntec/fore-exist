{
    "openapi": "3.0.0",
    "info": {
        "version": "0.1.0",
        "title": "Fore Exist API",
        "description": "This is the place to add your own path endpoints"
    },
    "servers": [
        {
            "description": "Endpoint for testing on localhost",
            "url": "http://localhost:8080/exist/apps/fore-exist"
        }
    ],
    "tags": [
        {
            "name":"pages",
            "description":"pages API"
        },
        {
            "name": "todo",
            "description": "sample app"
        }
    ],
    "components": {
        "securitySchemes": {
            "basicAuth": {
                "type": "http",
                "scheme": "basic"
            },
            "cookieAuth": {
                "type": "apiKey",
                "name": "foreexist.login",
                "in": "cookie"
            }
        }
    },
    "paths": {
        "/login": {
            "post": {
                "summary": "User Login",
                "description": "Start an authenticated session for the given user",
                "tags": ["auth"],
                "operationId": "auth:login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/xml": {
                            "schema": {
                                "type": "object"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "required": [ "user" ],
                                "properties": {
                                    "user": {
                                        "description": "Name of the user",
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "required": [ "user" ],
                                "properties": {
                                    "user": {
                                        "description": "Name of the user",
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "user": { "type": "string" },
                                        "groups": {
                                            "type": "array",
                                            "items": { "type": "string" }
                                        },
                                        "dba": { "type": "boolean" },
                                        "domain": { "type": "string" }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Wrong user or password"
                    }
                },
                "security": [{ "cookieAuth": [] }]
            }
        },
        "/logout": {
            "get": {
                "summary": "User Logout",
                "description": "End session of the current user",
                "operationId": "auth:logout",
                "tags": ["auth"],
                "parameters": [
                    {
                        "name": "logout",
                        "in": "query",
                        "description": "Set to some value to log out the current user",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": { "type": "boolean" }
                                    }
                                }
                            }
                        }
                    },
                    "301": {
                        "description": "Redirect with the logout parameter set.",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "401": { "description": "unauthorized" }
                }
            }
        },
        "/page": {
            "get": {
                "summary": "load a users todo list",
                "operationId": "fp:load-page",
                "tags": ["pages"],
                "responses": {
                    "200":{
                        "description": "returns todos",
                        "content": {
                            "application/xml": {}
                        }
                    }
                }
            },
            "post": {
                "summary": "save a page",
                "operationId": "fp:save-page",
                "tags": ["pages"],
                "parameters": [
                    {
                        "name": "filename",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "collection",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200":{
                        "description": "returns status of save operation",
                        "content": {
                            "application/xml": {}
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/xml": {}
                    }
                }
            }
        },
        "/todo": {
            "get": {
                "summary": "load a users todo list",
                "operationId": "todo:load-todos",
                "tags": ["todo"],
                "responses": {
                    "200":{
                        "description": "returns todos",
                        "content": {
                            "application/xml": {}
                        }
                    }
                }
            },
            "post": {
                "summary": "save a users todo list",
                "operationId": "todo:save-todos",
                "tags": ["todo"],
                "parameters": [
                    {
                        "name": "collection",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200":{
                        "description": "returns status of save operation",
                        "content": {
                            "application/xml": {}
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/xml": {}
                    }
                }
            }
        }
    },
    "security": [
        {
            "cookieAuth": []
        },
        {
            "basicAuth": []
        }
    ]
}